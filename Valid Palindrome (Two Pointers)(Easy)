class Solution {
    public boolean isPalindrome(String s) {
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < s.length(); i++) {
            char currentChar = s.charAt(i);
            if(Character.isLetterOrDigit(currentChar)){
                sb.append(Character.toLowerCase(currentChar));
            }
        }
        String filteredString = sb.toString();
        String reversedString = sb.reverse().toString();

        return filteredString.equals(reversedString);
    }
}

class Solution {                                                           // How to solve using Two Pointer
    public boolean isPalindrome(String s) {
        StringBuilder sb = new StringBuilder();
        for(char iteration : s.toCharArray()){
            if(Character.isLetterOrDigit(iteration)){
                sb.append(Character.toLowerCase(iteration));
            }
        }
        int left = 0;
        int right = sb.length() - 1;
        while(left < right){
            if(sb.charAt(left) != sb.charAt(right)){
                return false;
            }
            left++;
            right--;
        }

        return true;
    }
}
