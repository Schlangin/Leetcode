class Solution {
    public int carFleet(int target, int[] position, int[] speed) {
        int N = position.length;
        double[][] cars = new double[N][2];  // Each row has [position, time]

        for (int i = 0; i < N; i++) {
            cars[i][0] = position[i];
            cars[i][1] = (double) (target - position[i]) / speed[i];
        }

        Arrays.sort(cars, (a, b) -> Double.compare(a[0], b[0]));

        Stack<Double> stack = new Stack<>();
        for (int i = N - 1; i >= 0; i--) {                              // iterates Array of 'cars' in reverse
            if (stack.isEmpty() || cars[i][1] > stack.peek()) {
                stack.push(cars[i][1]);
            }
        }
        return stack.size();
    }
}
