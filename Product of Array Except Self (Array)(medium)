class Solution {                                   // THIS BRUTE FORCE METHOD WILL NOT PASS AS ITS INEFFICIENT
    public int[] productExceptSelf(int[] nums) {
        int[] answerArray = new int[nums.length];
        for (int i = 0; i < nums.length; i++) {
            int temp = 1;
            for (int j = 0; j < nums.length; j++) {
                if(i == j){
                    continue;
                }else{
                    temp = temp * nums[j];
                }
            }
            answerArray[i] = temp;
        }
        return answerArray;
    }
}
class Solution {                                    // THIS IS THE REAL SOLUTION
    public int[] productExceptSelf(int[] nums) {
        int N = nums.length; // length of the array
        int[] left_products = new int[N];
        int[] right_products = new int[N];

        int[] output_arr = new int[N];    

        left_products[0] = 1;
        right_products[N - 1] = 1;

        for (int i = 1; i < N; i++) {
            left_products[i] = nums[i - 1] * left_products[i - 1];
        }
        for(int i = N - 2; i>=0; i--){
            right_products[i] = nums[i+1] * right_products[i + 1];
        }
        for (int i = 0; i < N; i++) {
            output_arr[i] = left_products[i] * right_products[i];
        }
        return output_arr;
    }
}
