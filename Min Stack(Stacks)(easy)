class MinStack {                                        // BEST METHOD USING TWO STACKS
    private LinkedList<Integer> stack;
    private LinkedList<Integer> minStack;

    public MinStack() {
        stack = new LinkedList<>();
        minStack = new LinkedList<>();
    }

    public void push(int val) {
        stack.addFirst(val);
        if (minStack.isEmpty() || val <= minStack.getFirst()) {
            minStack.addFirst(val);
        }
    }

    public void pop() {
        if (!stack.isEmpty()) {
            int popped = stack.removeFirst();
            if (popped == minStack.getFirst()) {
                minStack.removeFirst();
            }
        }
    }

    public int top() {
        return stack.getFirst();
    }

    public int getMin() {
        return minStack.getFirst();
    }
}
